name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('search/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./search
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      working-directory: ./search
      run: |
        pytest --tb=short -v
    
    - name: Test database initialization
      working-directory: ./search
      run: |
        python init_sqlite_db.py
        sqlite3 search.db ".schema" | grep -q "documents"
        echo "Database initialization test passed"
    
    - name: Test scraper with sample data
      working-directory: ./search
      run: |
        echo '["https://httpbin.org/html"]' > test_links.json
        timeout 30 python scrapers/util.py test_links.json search.db || true
        echo "Scraper test completed"

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Check build artifacts
      working-directory: ./frontend
      run: |
        ls -la build/
        echo "Frontend build test passed"

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      working-directory: ./search
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Initialize database and add test data
      working-directory: ./search
      run: |
        python init_sqlite_db.py
        echo '["https://httpbin.org/html"]' > test_links.json
        timeout 30 python scrapers/util.py test_links.json search.db || true
    
    - name: Start API server
      working-directory: ./search
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 5
        echo "API server started"
    
    - name: Test API endpoints
      run: |
        # Test health endpoint
        curl -f http://localhost:8000/health
        
        # Test search endpoint
        curl -f -X POST "http://localhost:8000/search" \
          -H "Content-Type: application/json" \
          -d '{"query": "test"}' \
          || echo "Search endpoint test completed (may return empty results)"
        
        echo "Integration tests passed"